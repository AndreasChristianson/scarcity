kind: Deployment
apiVersion: extensions/v1beta1
metadata:
  name: scarcity-app
spec:
  replicas: 2
  template:
    metadata:
      name: scarcity-template
      labels:
        app: scarcity
    spec:
      containers:
      - name: scarcity-container
        image: andreaschristianson/scarcity:$COMMIT
        env:
          - name: PGHOST
            value: $PGHOST
          - name: PGUSER
            value: $PGUSER
          - name: NODE_ENV
            value: production
        imagePullPolicy: Always
        readinessProbe:
          httpGet:
            path: /healthz
            port: 80
        livenessProbe:
          httpGet:
            path: /healthz
            port: 80
        ports:
        - name: scarcity-port
          containerPort: 80
        resources:
          requests:
            cpu: 0
---
kind: Service
apiVersion: v1
metadata:
  name: scarcity-service
spec:
  type: LoadBalancer
  loadBalancerIP: "35.239.165.140"
  ports:
  - name: http
    port: 80
    targetPort: 80
    protocol: TCP
  selector:
    app: scarcity
---
kind: Deployment
apiVersion: extensions/v1beta1
metadata:
  name: scarcity-redis
spec:
  template:
    metadata:
      name: redis-template
      labels:
        app: redis
    spec:
      containers:
      - name: redis-container
        image: redis:4-alpine
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - "redis-cli -h $(hostname) ping"
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - "redis-cli -h $(hostname) ping"
        ports:
        - containerPort: 6379
          name: redis-port
        resources:
          requests:
            cpu: 0
---
kind: Service
apiVersion: v1
metadata:
  name: redis
spec:
  ports:
  - port: 6379
    protocol: TCP
  selector:
    app: redis
---
kind: Service
apiVersion: v1
metadata:
  name: $PGHOST
spec:
  ports:
  - port: 5432
    protocol: TCP
  selector:
    app: pg
---
apiVersion: apps/v1beta2
kind: StatefulSet
metadata:
  name: scarcity-postgres
spec:
  selector:
    matchLabels:
      app: pg-template
  serviceName: "postgres"
  replicas: 1
  template:
    metadata:
      labels:
        app: pg-template
    spec:
      terminationGracePeriodSeconds: 20
      containers:
      - name: pg-container
        image: postgres:10-alpine
        env:
        - name: POSTGRES_PASSWORD
          value: $PGUSER
        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata
        ports:
        - containerPort: 5432
          name: pg-port
        volumeMounts:
        - mountPath: /var/lib/postgresql/data
          name: pg-data
  volumeClaimTemplates:
  - metadata:
      name: pg-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 1Gi
